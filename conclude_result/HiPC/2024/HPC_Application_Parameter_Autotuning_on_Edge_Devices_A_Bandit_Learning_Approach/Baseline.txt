### Baseline选取总结：

1. **对比方法**:  
   - BLISS（Bayesian Learning-based Iterative Software System）

2. **选取理由**:  
   - **SOTA代表性**：BLISS是当前最先进的（SOTA）基于机器学习的优化方法，采用贝叶斯优化（BO）来减少调优开销，并通过构建多样化的简化模型池加速收敛。选择它能够直接对比LASP与前沿方法的性能差异。  
   - **技术路线对比**：BLISS依赖复杂的代理模型预测和计算密集型优化，而LASP专注于轻量级设计（适合资源受限的边缘设备）。这种对比凸显了两种技术路线的优劣（如BLISS的精度优势 vs. LASP的资源效率）。  
   - **实验验证需求**：作者通过分析BLISS与LASP在CPU/内存占用上的差异（在MAXN和5W两种功耗模式下），证明LASP更适合边缘场景的动态性需求，从而强化了论文的贡献——轻量化自适应调优的实用性。  

**补充说明**：  
论文虽未明确列出其他经典基线（如随机搜索、遗传算法等），但通过强调与BLISS的对比，集中体现了其创新点（轻量化与边缘适应性）。若存在其他隐含基线（如默认配置），作者主要通过性能增益（\(P G_{best}\)）间接对比，但未列为显式基线方法。