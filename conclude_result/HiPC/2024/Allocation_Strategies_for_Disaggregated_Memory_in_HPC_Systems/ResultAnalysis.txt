实验结果分析总结：

1、主要发现:  
- 在内存受限情况下，分散式内存分配启发式方法（Disaggregated heuristics）显著优于聚合式方法（Aggregated）。当节点平均内存为150GB（平均使用内存的150%）时，分散式方法的性能与无内存限制的基线（256GB/节点）几乎相同（仅损失0.2%）。  
- 当内存进一步受限（125GB/节点）时，Priority启发式方法优于其他策略（Oldest-First/Largest-First），性能损失仅为基线的0.7%。在极端内存受限场景下，Priority比Oldest-First和Largest-First分别提升2%和4%的利用率。  
- 对于动态内存模式，Stochastic策略在内存受限时表现最佳，可将节点内存需求减少40%（至150GB），仅损失2%性能。

2、消融研究结论:  
- **关键组件作用验证**：  
  - **Priority策略**：在静态分段内存模式下效果显著，其优势依赖于重配置时间（τ_alloc）远小于阶段长度（E(L_m)）。当E(L_m)/τ_alloc ≥100时效率最高；若该比值≤25或内存充足（>200GB），聚合式策略更优。  
  - **Stochastic策略**：专为动态内存模式设计，通过统计内存行为分配资源。实验表明其在动态场景下优于Priority和Aggregated，尤其在重配置开销高时。  

3、其他分析洞察:  
- **参数敏感性分析**：  
  - 存储带宽比α的影响：α越高（内存带宽相对外部存储越快），分散式方法性能越好。但即使α较低（如0.1），分散式方法仍保持鲁棒性。  
  - 重配置时间τ_alloc的影响：当τ_alloc接近阶段长度时，聚合式存储更优；否则在线重配置方案不适用动态内存模式。  
- **案例研究**：  
  - 动态模式下的异常现象：极少数情况下，Stochastic或Aggregated在低内存下的性能可能超过基线（如200GB场景），这是调度启发式全局优化的副作用。  
- **响应时间验证**：所有调度策略均未因内存限制而任意延长作业响应时间，即使在小内存场景下也保持公平性。  

关键结论提炼：  
1. Priority适用于静态分段内存，可减少50%内存需求（性能损失0.7%）；  
2. Stochastic针对动态模式，通过统计分配实现40%内存节省（性能损失2%）；  
3. 系统参数（α、τ_alloc）需满足特定条件（如E(L_m)/τ_alloc ≥100）以发挥分散式策略优势。