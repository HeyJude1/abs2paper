### 度量指标总结  

#### 1、评估指标:  
- **数据丰度（Abundance of performance data）**: 衡量工具收集的性能数据类型多样性（如CPU性能计数器、耗时、函数参数、MPI通信、函数追踪等）。  
- **时间开销（Time overhead）**: 衡量工具进行数据收集时额外消耗的时间（单位：秒）。  
- **存储开销（Storage overhead）**: 衡量工具收集的性能数据占用的额外存储空间（单位：KB）。  
- **热点分析（Hotspot analysis）**: 通过调用栈树状图（HPCToolkit）、扁平视图（TAU）或内存缓冲区排序（Scalasca）识别程序中最耗时的函数或代码区域。  
- **可扩展性损失指标（Scalability loss metrics）**: 量化程序在扩展时性能与理想速度的差距（如HPCToolkit的树状视图和TAU的实测/理想加速比对比）。  
- **性能方差分析（Performance variance analysis）**: 通过异常检测（如TAU的ParaProf分布图）识别程序运行时的性能波动或异常节点。  

#### 2、选取理由:  
论文选择的指标全面覆盖了高性能计算（HPC）性能分析的四个核心维度：  
1. **数据收集效率**：通过丰度、时间/存储开销，量化不同工具（采样型vs插桩型）在数据全面性与资源消耗间的权衡。  
2. **可视化有效性**：热点分析和追踪可视化指标揭示了现有工具在直观呈现大规模程序性能问题上的不足。  
3. **可扩展性诊断**：可扩展性损失指标直接反映程序并行化效率，但缺乏根因定位能力。  
4. **异常检测**：性能方差分析指标用于识别硬件/软件配置导致的非确定性性能下降。  

这些指标的选取依据在于：  
- **针对性**：每个指标对应HPC性能分析的关键挑战（如低开销数据收集、大规模追踪可解释性）。  
- **互补性**：结合定量指标（时间/存储开销）与定性评估（可视化效果），综合评判工具优劣。  
- **实用性**：直指现有工具的缺陷（如Pitfall 1-4），为未来工具开发提供改进方向（如结合机器学习优化根因分析）。  

综上，论文通过多维度的指标设计，系统评估了HPC性能分析工具的能力边界与改进空间。