## 度量指标总结  

### 1. 评估指标  
**a) Bootstrapping Time**（引导时间）:  
- **衡量方面**: 衡量完成不同引导操作（BM-bootstrap）所需的时间，反映计算效率。  
- **应用场景**: 用于评估不同异步内存分配阈值（40%-60%）对性能的影响。  

**b) Inference Latency**（推理延迟）:  
- **衡量方面**: 衡量在加密状态下运行ResNet模型推理的延迟，反映模型实际部署性能。  
- **关键数据**: 异步内存阈值设为65%时性能最优。  

**c) Asynchronous Memory Threshold Ratio**（异步内存分配阈值比例）:  
- **衡量方面**: 量化异步分配内存的占比（如40%-60%、65%、68%），用于平衡内存利用与计算效率。  
- **实验关联**: 直接关联到动态/静态分配策略的性能差异。  

**d) Performance Variance**（性能方差）:  
- **衡量方面**: 评估不同方案（静态、动态、全托管内存）在相同参数下的稳定性。  
- **关键结论**: 全托管内存方案方差最大，静态方案最稳定。  

### 2. 选取理由  
论文选择的指标围绕**计算效率**和**资源利用率**两大核心目标：  
1. **针对性覆盖关键操作**：Bootstrapping Time和Inference Latency分别对应同态加密中的核心计算任务（引导和推理），直接反映实际应用场景的性能瓶颈。  
2. **硬件适配性分析**：通过Asynchronous Memory Threshold Ratio量化不同GPU（如A40 vs. GTX 1050）的内存分配策略优化效果，揭示硬件资源与算法设计的匹配关系。  
3. **方案对比需求**：Performance Variance和具体延迟数据（如静态vs.动态）提供了不同方案（侵入式修改vs.非侵入式）的权衡依据，支持“动态方案代码兼容性好但静态方案性能更优”的结论。  

综上，指标选取兼顾了理论性能（延迟、时间）、实际约束（内存阈值）、以及工程可行性（代码修改侵入性），形成了多维度的评估体系。