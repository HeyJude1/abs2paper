方法概述：
1、方法名称: 混合内存分配策略（Hybrid Memory Allocation Strategy）
2、核心思想: 通过结合异步内存分配（cudaMallocAsync）和统一内存管理（cudaMallocManaged），在保证内存不溢出的前提下，优化GPU上全同态加密（FHE）计算的性能。该方法的核心直觉是：短生命周期的对象使用异步分配以减少同步开销，而长生命周期或大内存需求的对象使用统一内存管理以避免OOM错误。

3、主要流程/组件
组件/步骤一: 静态混合分配方案
- 功能: 手动指定临时缓冲区使用cudaMallocAsync分配，其他对象使用cudaMallocManaged。通过预取（prefetching）和内存建议（cudaMemAdvise）进一步优化性能。

组件/步骤二: 基于性能分析的动态分配方案
- 功能: 首次运行工作负载时收集GPU对象的生命周期数据（分配/释放时间戳、大小等），通过Python脚本分析后生成分配策略（短生命周期对象标记为异步分配）。后续运行直接应用该策略。

组件/步骤三: 启发式实时动态分配方案
- 功能: 运行时通过维护一个活跃分配队列（记录对象大小和未释放计数），当检测到某类对象频繁快速释放时（队列范围值低于阈值X），自动将其切换为异步分配。无需预先分析，完全基于运行时行为决策。

关键关系说明:
1. 静态方案作为基线验证了混合分配的可行性，但需要人工干预代码；
2. 性能分析方案通过离线分析提供精确分配策略，适用于可重复工作负载；
3. 实时动态方案是前两者的进化，通过启发式规则实现零预热的自适应分配。
所有方案共享同一核心原则：短生命周期→异步分配，长生命周期→统一内存管理。