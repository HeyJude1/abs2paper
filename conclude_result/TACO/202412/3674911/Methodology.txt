方法概述：
1、方法名称: AG-SpTRSV (Automatic Framework to Optimize Sparse Triangular Solve on GPUs)

2、核心思想: 
AG-SpTRSV是一个自动化框架，旨在通过动态并行化、自适应代码优化和智能调度策略，为不同稀疏模式的矩阵生成最优的GPU SpTRSV（稀疏三角求解）内核。其核心是通过四阶段流程（准备-转换-调度-选择）自动探索庞大的优化空间，避免传统手动调参的局限性，实现跨稀疏模式的高性能一致性。

3、主要流程/组件:
组件/步骤一: Prepare（准备阶段）
- 功能：基于统一代码模板生成多种并行化变体（Code Variants），支持细粒度动态并行化（Fine-Grained Dynamic Parallelism）和自适应代码优化（如协同内存访问、同步消除、提前除法等）。
- 关键参数：子线程束数量nₑ、线程块内活动线程束数n_w、非零元素阈值sw_rnnz。

组件/步骤二: Transform（转换阶段）
- 功能：将稀疏矩阵转化为计算图，通过节点合并（merging）和重排序（reordering）生成候选计算图。
- 合并策略：固定块大小(merge_fixed)、按行平均非零数(merge_avg)、按非零数阈值(merge_thresh)。
- 目标：平衡任务粒度与并行度，改善数据局部性。

组件/步骤三: Schedule（调度阶段）
- 功能：采用三层次启发式调度将计算图映射到GPU硬件：
  1) 节点分组：按拓扑序分组，策略包括顺序分组(rg_sequential)或负载均衡分组(rg_balance)。
  2) 线程束调度：轮询(ws_rr)、负载均衡(ws_balance)或数据局部性优先(ws_locality)。
  3) 内核划分：根据层级任务量动态决定是否合并内核执行。

组件/步骤四: Select（选择阶段）
- 功能：通过穷举搜索或轻量级学习模型从优化空间中选择最优方案。
- 性能模型：基于10维矩阵特征（如非零分布、依赖距离等）的MLP模型，预测85%以上最优性能的方案。
- 优化空间缩减：从3.2e5种方案经验性缩减至1.6e3种可评估方案。

各组件关系：
四个阶段形成闭环流水线——准备阶段提供基础代码变体，转换阶段生成任务拓扑结构，调度阶段完成硬件映射，选择阶段最终确定最优方案。整个过程通过自动化消除人工设计成本，同时覆盖比现有工作更大的优化空间。