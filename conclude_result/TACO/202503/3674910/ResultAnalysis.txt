### 实验结果分析总结：

#### 1、主要发现:  
- **与Baseline对比**：  
  - **Hyper Boost（工业基准）**：MobiRL在58种工作负载下平均帧丢弃率（2.2% vs. 6.3%）和功耗（275.8 mW vs. 482.1 mW）分别降低4.1%和42.8%。帧渲染时间在50th/90th/95th/99th百分位点减少21.0%~23.1%。  
  - **Q-Learning（ML基准）**：MobiRL在淘宝、微博等应用中帧丢弃率降低0.1%~2.5%，功耗降低3.0%~32.6%，且能同时优化两者，而Q-Learning仅优化功耗。  
  - **默认CPUFreq调度器**：相比性能模式（performance），MobiRL功耗降低2.3倍；相比节能模式（powersave），帧丢弃率降低28.2%；相比动态调度器（schedutil/conservative），帧丢弃率降低3.9%~5.5%，功耗降低35.5%~36.7%。  

#### 2、消融研究结论:  
- **迁移学习的作用**：  
  - 从60 FPS迁移到120 FPS训练时，模型收敛所需训练轮数从100轮降至50轮，且收敛后的奖励提升23.6%，验证了迁移学习显著降低重新训练成本。  
- **关键组件**：  
  - **DDPG模型**：通过动态调整CPU/GPU频率下限（如CPU集群1从960 MHz升至1670 MHz），平衡帧丢弃率与功耗。  
  - **输入特征设计**：包含TOP-APP任务负载和运行CPU集群ID，使其能精准调度目标集群频率，而Q-Learning因仅依赖CPU负载估计导致性能不足。  

#### 3、其他分析洞察:  
- **泛化能力**：  
  - **未见应用测试**：在未训练的西瓜视频、VR应用等场景中，帧丢弃率降低1.4%~14%，功耗降低14.6%~78.4%。  
  - **负载变化适应性**：在不同TOP-APP负载（滑动间隔1~5秒）和后台应用数量（0~12个）下均表现稳定，例如后台负载高时帧丢弃率仍优于Hyper Boost 2.7%~8%。  
- **实时性能分析**：  
  - MobiRL能在1.5秒内快速调整频率上限/下限（如GPU从315 MHz升至676 MHz），且避免频繁波动，优先选择长期最优配置。  
- **硬件效率分析**：  
  - CPU集群0（节能核心）最高频率使用时间占比达96.7%（Hyper Boost为39.7%），说明高效利用节能核心实现性能与功耗平衡。  
- **开销评估**：  
  - 模型推理耗时6.7 ms，内存占用7 MB，对后台应用IPC影响小于4.8%，硬件差异可通过低开销迁移学习适配。  

---  
以上总结基于论文实验数据的结构化提取，突出了方法优势的关键证据及消融实验的验证逻辑。