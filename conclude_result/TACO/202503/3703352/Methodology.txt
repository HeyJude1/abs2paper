方法概述：
1、方法名称: ApSpGEMM (Adaptive-panel-based Sparse General Matrix-Matrix Multiplication)
2、核心思想: 通过轻量级矩阵特征分析和自适应分块策略，结合CPU-GPU异构协同计算，解决大规模稀疏矩阵乘法中非零元素分布不规则性带来的负载不均衡、内存访问效率低下及设备间数据传输延迟等问题。
3、主要流程/组件
组件/步骤一: 矩阵预分析(Matrix Pre-Analysis)
- 快速提取关键稀疏特征：统计矩阵A/B每行非零元(NNZs)数量及矩阵A的列非零元数量
- 采用前缀和算法高效计算CSR格式中的行/列非零元分布
- 输出特征指导后续分块与计算优化

组件/步骤二: 矩阵分块(Matrix Splitting)
- 基于稀疏度阈值S将矩阵重排序并划分为稠密面板(S>0.05)和稀疏面板(S≤0.05)
- 采用快速排序对行按稀疏度降序排列，保留原始列索引关系
- 生成三种计算类型：SpGEMM(稀疏×稀疏)、SpMM(稀疏×稠密)、DGEMM(稠密×稠密)

组件/步骤三: 核内计算(In-Core GPU Computation)
- SpGEMM优化：动态装箱策略平衡线程块负载，自适应线程组分配(M=8/4/2)处理不同长度行
- SpMM优化：通过稠密列检测实现非零元共享，减少全局内存访问次数(公式约束：4(MK+MQ)<S)
- DGEMM兼容：支持Strassen等算法加速，配置128KB共享内存+1024线程最大化硬件利用率

组件/步骤四: 异构协同(Heterogeneous Collaboration)
- 核心亲和力(Affinity)度量：根据面板稀疏度动态分配计算设备(高稀疏→GPU，低稀疏→CPU)
- 异步重叠调度：同步第i次计算与第(i±1)次数据传输，隐藏PCIe传输延迟
- 分配比例优化：通过实验确定GPU/CPU最佳任务比例R=K/(K+1)(建议60%-65%)