由于提供的论文内容未明确列出具体的Baseline对比方法名称（如未出现类似"Compared with Method A/Method B..."的明确对比实验描述），根据现有信息可总结如下：

---  
**Baseline选取总结：**  
1. **对比方法:**  
   - UWOpenMP (Aloor and Nandivada)  
   - UWOmp++  
   - OpenMP原生任务模型（含`taskwait`依赖子句）  
   - HJ (Habanero-Java) 的OSDeCont方案  

2. **选取理由:**  
   - **技术路线覆盖性**: 选择UWOpenMP和UWOmp++作为直接前驱工作，因二者与UWOmpₚᵣₒ同属Unique Worker模型技术路线，但缺乏点对点同步支持（论文核心创新点）。  
   - **领域代表性**: OpenMP原生任务是工业界广泛采用的并行编程标准，其`taskwait`依赖子句提供了粗粒度同步机制，与UWOmpₚᵣₒ的细粒度迭代同步形成对比。  
   - **方法论对比**: HJ的OSDeCont方案代表基于continuation的协同调度方案，但其调度策略受限（仅支持work-first/help-first），而UWOmpₚᵣₒ通过通用化continuation设计解除此限制。  

**依据说明**:  
选取逻辑基于论文"Related Work"部分的讨论：  
1. 明确提及UWOpenMP和UWOmp++是UWOmpₚᵣₒ的直接技术基础（§8首段）；  
2. 通过对比OpenMP任务模型强调UWOmpₚᵣₒ在同步粒度上的优势（§8第二段）；  
3. 引用HJ说明continuation设计的通用性改进（§8末段）。  

---  
注：若需更精确总结，需补充实验章节中明确列出的对比方法名称及量化结果部分。