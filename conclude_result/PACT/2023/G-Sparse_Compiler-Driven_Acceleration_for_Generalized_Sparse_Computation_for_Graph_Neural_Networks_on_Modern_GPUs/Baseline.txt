### Baseline选取总结：

1. **对比方法**:
   - DGL v0.9.1  
   - FeatGraph  
   - Sputnik  
   - cuSPARSE  

2. **选取理由**:  
   作者选择的Baseline均为**当前最先进的（SOTA）或广泛采用的GPU稀疏计算实现**，具体依据如下：  
   - **DGL**：主流图神经网络框架，默认集成cuSPARSE作为高性能基准，代表通用框架的优化水平。  
   - **FeatGraph**：专为GNN设计的稀疏计算库，支持动态调优CUDA块数量，与DGL共享优化技术但实现更灵活。  
   - **Sputnik**：面向DNN的稀疏计算优化方案，采用层次化1D分块策略，是稀疏计算领域的代表性工作。  
   - **cuSPARSE**：NVIDIA官方稀疏计算库，作为硬件厂商实现的性能标杆。  

   选择这些方法的**核心原因**包括：  
   1. **技术路线覆盖性**：涵盖通用框架（DGL）、专用库（FeatGraph/Sputnik）和硬件厂商实现（cuSPARSE），能全面验证G-Sparse的优势。  
   2. **性能对比需求**：通过超越SOTA方法（如平均加速比达3.2×）证明优化有效性。  
   3. **优化策略差异化**：各Baseline采用不同关键技术（如FeatGraph的动态调优 vs. Sputnik的1D分块），便于凸显G-Sparse的2D共享内存优化等创新点。  

   此外，实验设计通过统一集成到DGL框架、固定硬件环境及数据集（REDDIT/OGBN系列）确保公平性。