实验结果分析总结：

1、主要发现:
- 在CPU上，与sklearn相比，未经优化的方法实现了1.31x-2.54x的加速；通过dtype重写和稀疏算子替换优化后，树模型达到1.84x-4.44x加速，线性模型达到1.06x-1.14x加速。
- 在IoT设备上（Raspberrypi4b），由于sklearn支持有限，未经优化的方法作为基线。优化后树模型实现1.49x-2.53x加速，线性模型实现1.95x-1.98x加速。
- 在整体性能对比中（14种算法），在CPU上优于12/14算法（相比sklearn加速1.02x-10.57x）；GPU上优于11/14算法（相比hummingbird加速1.11x-3.31x）；IoT设备上优于13/14算法（加速1.28x-5.09x）。
- 混合部署案例中，CML与DL联合优化在服务器CPU上实现1.67x-3.04x加速，并成功支持了原本无法在IoT设备运行的模型。

2、消融研究结论:
- 关键优化组件包括：
  a) dtype重写（DR）：为树模型带来1x-1.21x（CPU）/1.01x-1.33x（IoT）独立加速
  b) 稀疏算子替换（SOR）：为树模型带来1.26x-1.75x（CPU）/1.23x-2.3x（IoT）独立加速
  c) 冗余消除（RE）：为线性模型带来1.22x-1.51x（CPU）/1.08x-1.14x（IoT）独立加速
- 这些优化具有累积效应，组合使用时树模型最高可达4.44倍加速。

3、其他分析洞察:
- 硬件适应性：通过ECG直接映射和硬件感知优化，解决了hummingbird因间接转换导致的性能损失问题。
- 精度验证：与sklearn的输出差异小于10^-5，证明优化不影响计算精度。
- 混合部署优势：统一框架避免了跨框架开销，三个案例显示：
  a) 情感分类：IoT延迟18ms（基线无法运行）
  b) 医学图像分析：支持原本无法运行的预训练随机森林
  c) CTR预测：IoT延迟仅5.06ms
##注：所有实验均基于YearPrediction数据集（515,345样本），采用5次重复实验取平均值的严谨方法。GPU优化效果有限（计算占比<20%）反映了不同硬件的特性差异。