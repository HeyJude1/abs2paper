方法概述：
1、方法名称: Hepti (Heterogeneous Edges' Parallel Transformer Inference)
2、核心思想: Hepti是一个面向异构边缘设备的Transformer模型并行推理框架，通过动态负载分区和三种权重驻留模式的灵活切换，在保证内存约束的前提下最小化计算与通信延迟，从而满足服务级别目标（SLO）。

3、主要流程/组件
组件/步骤一: 设备性能分析阶段（Profiling Stage）
- 功能：收集边缘设备的CPU频率、可用内存大小和网络带宽等资源数据，为后续动态分区提供决策依据。

组件/步骤二: 动态负载分区算法（Dynamic Workload Partitioning）
- 功能：基于混合整数线性规划（MILP）求解器，根据设备计算能力、网络状态和SLO延迟要求，实时优化矩阵分块大小（𝑎𝑖）。通过连续变量λ近似离散问题，支持行/列双向分割的2D分块策略。

组件/步骤三: 并行推理执行引擎
- 包含三种权重驻留模式：
  • WS模式（Weight-stationary）：全权重驻留，采用R列向MatMul（自注意力）和L行向MatMul（MLP），通信开销最小但内存需求最高。
  • 1D-tiled WS模式：单维度权重分块，对MLP使用块状MatMul并需all-reduce通信，适用于设备数<16的中等内存场景。
  • 2D-tiled WS模式：二维权重分块，通过双重分区和all-reduce操作实现更高通信效率，适合大规模设备集群的低内存环境。

组件/步骤四: 运行时自适应切换机制
- 功能：在推理过程中持续监控设备内存状态，通过中间张量交换获取实时资源信息，动态触发模式切换和重新分区决策，避免内存溢出。

关键关系说明：
性能分析→动态分区→并行执行形成闭环控制流程。WS/1D-tiled/2D-tiled三种模式根据设备数和内存容量自动选择（1D-tiled优先用于<16设备，否则2D-tiled），并通过运行时监测实现无缝切换。分区算法通过约束条件（公式1-4）确保张量分割合法性，目标函数（公式7）最小化总延迟。