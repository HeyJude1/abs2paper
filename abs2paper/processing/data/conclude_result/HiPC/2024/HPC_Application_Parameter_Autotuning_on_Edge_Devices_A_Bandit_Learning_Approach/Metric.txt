### 度量指标总结  

#### 1. **评估指标**  
- **性能增益（Performance Gain, \( P G_{best} \)**）:  
  衡量默认配置与最优配置之间的性能差异，以百分比形式表示。公式为：  
  \[
  P G_{best} = \frac{f_{default} - f_{best}}{f_{default}} \times 100\%
  \]  
  其中，\( f_{default} \) 为默认配置下的性能（如执行时间或功耗），\( f_{best} \) 为最优配置下的性能。  

- **执行时间（Execution Time）**:  
  衡量应用程序在特定配置下的运行时长，反映算法的计算效率。  

- **功耗（Power Consumption）**:  
  衡量设备在运行时的能源消耗，反映配置的能效表现。  

- **遗憾值（Regret）**:  
  通过累积遗憾分析评估算法收敛性，衡量实际选择与理论最优配置之间的差距。公式未明确给出，但隐含在迭代过程中对次优选择的量化。  

- **采样效率（Sampling Efficiency）**:  
  评估算法在有限迭代次数内探索配置空间的有效性，通过热图可视化（如Lulesh的配置选择频率）和收敛速度体现。  

- **鲁棒性（Resilience to Noise）**:  
  通过引入合成误差（5%、10%、15%随机噪声）测试算法对数据波动的适应性，模拟实际网络波动或测量异常的影响。  

#### 2. **选取理由**  
论文选择的指标覆盖了**多目标优化**的核心维度：  
- **性能与能效平衡**：执行时间和功耗直接反映边缘计算场景的关键需求（速度与资源约束）。  
- **实用性验证**：性能增益和遗憾值量化了算法实际收益，证明其优于默认配置或对比方法（如BLISS）。  
- **动态适应性**：鲁棒性测试和采样效率验证了算法在资源受限或噪声环境中的实用性，符合边缘设备的真实条件。  
- **收敛性分析**：通过迭代次数与遗憾值的关系，证明算法在有限资源下的快速收敛能力，尤其针对参数空间大小不同的应用（如Hypre vs. Lulesh）。  

综合来看，这些指标从**准确性**（性能增益）、**效率**（执行时间、采样效率）、**稳定性**（鲁棒性）和**可扩展性**（多维参数空间处理）四个层面全面评估了LASP算法的有效性。