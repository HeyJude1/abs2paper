实验结果分析总结：

1、主要发现:
- 与基线方法BLISS（基于贝叶斯优化的SOTA方法）相比，LASP在资源受限的边缘设备（NVIDIA Jetson Nano）上表现出更优的轻量化特性，但参数搜索效率略低。这是因其优先考虑边缘设备的资源约束。
- 在性能增益方面：
  - 以功耗为目标时（α=0.2）：Clomp提升10%，Lulesh提升14%，Hypre提升9%，Kripke提升6%
  - 以执行时间为目标时（α=0.8）：在较小参数空间（如Lulesh/Kripke/Clomp）中表现更优，能在500次迭代内收敛；在Hypre等大参数空间中仍能达到最优配置12%以内的接近解
- 多目标优化中，LASP能有效平衡执行时间与功耗（通过热力图可视化验证）

2、消融研究结论:
- 参数权重α的敏感性分析表明：α值直接影响优化方向（低α侧重功耗，高α侧重执行时间）
- 迭代次数影响：500次迭代足以收敛小参数空间，1000次迭代可提升大参数空间的配置可移植性
- 随机噪声测试显示：即使在5%-15%数据误差下，LASP仍保持稳定性能增益，证明其对实际环境噪声的鲁棒性

3、其他分析洞察:
- 硬件特性影响：功耗优化的效果受限于边缘设备计算密集型任务下的功耗饱和现象
- 案例研究显示：
  - Lulesh的二维参数（材料数量/网格元素）优化中，热力图显示算法能有效聚焦高回报区域
  - Kripke/Clomp的三维参数优化验证了算法在多维空间的扩展性
- 资源开销对比：在MAXN和5W两种功率模式下，LASP的CPU/内存占用显著低于BLISS，适合资源受限场景