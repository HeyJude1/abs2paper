Baseline选取总结：  
1、对比方法:  
- **Alpa**（当前支持混合并行的最先进框架）  
- **GPipe调度策略**  
- **1F1B调度策略**  

2、选取理由:  
- **Alpa** 作为Baseline的核心依据：  
  1. **SOTA地位**：Alpa是当前支持所有混合并行形式（流水线并行、数据并行和张量并行）的最先进框架，具有代表性。  
  2. **功能覆盖全面**：其自动分阶段（autostaging）和自动分层（autolayering）功能为对比提供了标准化基准。  
  3. **实际硬件兼容性**：论文中Alpa的推荐分区方案在实验中暴露了内存限制问题，凸显了CAPTURE的改进价值。  

- **GPipe与1F1B调度策略** 的选取依据：  
  1. **技术路线代表性**：二者是流水线并行的经典调度策略，分别代表不同的内存与吞吐量权衡（GPipe高内存需求，1F1B更高效）。  
  2. **Alpa原生支持**：两种策略均为Alpa内置支持，便于在同一框架下进行公平对比。  
  3. **场景覆盖性**：实验通过这两种策略验证CAPTURE在纯流水线并行和混合并行下的普适性。  

- **排除mCAP的说明**：因CAPTURE基于mCAP扩展至混合并行，二者在纯流水线场景下结果一致，故无需重复对比，仅通过Alpa间接验证改进效果。  

综上，Baseline选择兼顾了技术先进性（SOTA框架）、方法多样性（不同调度策略）和问题针对性（内存优化场景），确保实验结论的可靠性和泛化能力。