实验设计总结：

1、核心目标:
- 验证共享内存并行算法CCSS-MEMO在运行时性能和线程扩展性上的优势（对比基线方法CCSS-DIRECT和CCSS-FFT）
- 分析超图结构特征（如边重叠程度、秩大小）对算法性能的影响
- 评估不同卷积计算策略（直接计算/FFT优化）与记忆化技术对S³TTVC计算的效率差异

2、数据集:
【真实数据】
- 8个来源多样的数据集，节点规模|V|：10³-10⁶，超边规模|E|：10⁴-10⁶
- 组件邻接张量维度Nk：22-100
- 包含过滤版本数据集（移除大小超过Nk的超边）

【合成数据】
- 4个随机超图数据集(S1-S4)
- 固定节点集和总超边数，超边大小均匀随机分布
- 组件对称邻接张量维度为5的倍数直至超图秩

3、关键设置:
【硬件环境】
- AMD Epyc 7713双路服务器（128核/512GB DDR4）

【软件实现】
- C++/OpenMP并行化，双精度浮点运算
- GCC 10.3.0编译，FFTW库实现FFT卷积
- Netlib LAPACK 3.8.0线性代数运算

【实验参数】
- 对比三种算法实现：
  • CCSS-DIRECT：直接多项式乘法
  • CCSS-FFT：FFT卷积优化
  • CCSS-MEMO：系数记忆化单遍历
- 评估维度：
  • 单核vs多核(128核)性能
  • 与SOTA方法(单核Python实现)的加速比
  • CCSS构建时间占比分析