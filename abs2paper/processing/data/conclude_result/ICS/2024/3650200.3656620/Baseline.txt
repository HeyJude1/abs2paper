Baseline选取总结：  
1、对比方法:  
- **XNN_F**（XNNPACK的融合SDPA算子）  
- **XNN_NF**（XNNPACK非融合SDPA算子，由多个子步骤堆叠实现）  
- **Ansor**（TVM的子模块，自动生成算子调度方案）  
- **BLIS**（经典稠密线性代数库，基于GEMM优化）  
- **PyTorch**（以BLIS为后端，作为端到端实验的基准）  

2、选取理由:  
作者选择的Baseline覆盖了当前主流的优化技术路线和代表性工具库：  
- **技术多样性**：包含手工优化库（XNNPACK）、自动编译优化（Ansor/TVM）、经典线性代数库（BLIS）及通用框架（PyTorch），全面对比不同优化策略的效果。  
- **权威性与SOTA**：XNNPACK是Google提供的高性能手工调优库，代表工业界最优实践；Ansor是TVM的自动调度模块，反映编译器前沿技术；BLIS是学术界广泛认可的经典库。  
- **问题针对性**：通过对比融合（XNN_F）与非融合（XNN_NF）实现，凸显MEATTEN在算子融合上的优势；通过BLIS和PyTorch验证基础GEMM优化的局限性。  
- **实验严谨性**：覆盖端到端推理（PyTorch）和单算子性能（其他Baseline），确保评估维度完整。  

综上，这些Baseline能有效验证MEATTEN在循环优化、微内核设计及并行策略上的创新价值。