相关工作总结：

1、现有方法一：Dijkstra类SSSP算法
核心思想: 基于优先级队列（二叉堆/Fibonacci堆）的经典单源最短路径算法，Meyer等人通过并行化优化实现了适用于大规模图的Δ-stepping变体。
主要局限性: 最佳并行版本的时间复杂度仍受限于最大路径权重(L)和节点度(D)，且平均时间复杂度为𝑂(𝐷•𝐿•log𝑛 + log²𝑛)，在极端图结构下效率受限。

2、现有方法二：方向优化BFS算法
核心思想: Scott Beamer等提出混合拓扑/底向上搜索策略，Julian Shun等通过简化实现代码达到相近效率，并集成至GBBS高性能计算框架。
主要局限性: 虽然通过方向优化提升了性能，但其应用场景主要针对特定图结构（如无权图），在加权图场景的普适性不足。

3、现有方法三：基于矩阵乘法的APSP算法
核心思想: 
- 矩阵平方乘法：通过log𝑛次矩阵乘法求解，但需存储大量中间矩阵
- Seidel算法：针对无权无向图，时间复杂度𝑂(log𝑛•𝑛^𝜔)但内存消耗大
- Arlazarov布尔矩阵乘法：部分缓解内存问题但适用性受限
主要局限性: 
(1) 空间复杂度随图规模急剧增长（需存储中间矩阵）
(2) Seidel算法仅适用于无权无向图
(3) 现有优化方案对内存需求的改善有限

研究缺口：
1. 并行SSSP算法的时间复杂度仍受关键参数(L/D)制约
2. BFS优化方法缺乏对加权图的通用解决方案
3. 矩阵类APSP算法的内存消耗问题尚未根本解决，特别是针对大规模加权图场景