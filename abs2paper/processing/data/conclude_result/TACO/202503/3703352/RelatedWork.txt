相关工作总结：

1、现有方法一：GPU加速SpGEMM（ESC方法）
核心思想: 采用Expansion-Sorting-Compression (ESC)三阶段法：先展开稀疏矩阵生成中间产物（Expand），然后按行列索引排序（Sort），最后合并相同索引值得到最终结果（Compress）。
主要局限性: 未充分考虑输入矩阵的结构特征对GPU资源利用率的影响，且三阶段流程可能引入额外开销。

2、现有方法二：特定结构矩阵优化（TSM2R/TSM2L）
核心思想: 针对"tall-and-skinny"矩阵设计专用算法（TSM2R和TSM2L），通过结构特征感知优化GPU资源分配。
主要局限性: 方法专用性强，难以泛化到其他矩阵结构类型。

3、现有方法三：负载均衡优化（Binning策略）
核心思想: 采用两步分箱法（符号阶段和数值阶段）或块重组器，通过计算任务分级实现负载均衡。
主要局限性: 分箱策略可能无法动态适应计算负载变化，块重组可能引入额外通信开销。

4、现有方法四：合并策略优化（RMerge/bhSPARSE）
核心思想: 使用类归并排序算法处理中间结果，包括子矩阵分解合并（RMerge）或动态选择合并方案（bhSPARSE）。
主要局限性: 合并过程仍存在不可预测的内存访问模式，动态选择策略可能带来决策开销。

5、现有方法五：超图分割模型（HP模型）
核心思想: 通过超图分割实现通信成本优化和负载均衡，可适配多种计算模式（外积/内积/逐行乘积）。
主要局限性: 分割过程本身计算成本较高，对矩阵特征敏感度不足。

6、现有方法六：CPU-GPU异构计算
核心思想: 采用水平分块+机器学习性能预测（Benatia）或内外核计算分离策略（Xia），协调异构设备间的计算通信。
主要局限性: 机器学习模型需要预训练，动态内存分配问题未完全解决，跨设备同步开销较大。

研究缺口总结：
1. 缺乏能同时适应不同矩阵结构特征的通用优化框架
2. 现有负载均衡策略对动态计算负载适应性不足
3. 内存访问模式优化与计算任务分配尚未形成统一理论
4. CPU-GPU协同计算中的通信同步瓶颈仍需突破
5. 超图分割等高级优化方法存在显著的计算开销