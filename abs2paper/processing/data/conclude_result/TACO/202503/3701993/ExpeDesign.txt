实验设计总结：

1、核心目标:  
- 验证指针解聚转换（pointer disaggregation transformation）在自动并行化中的有效性  
- 比较数据为中心的框架（DaCe）与传统编译器（GCC/Polly）在并行化能力上的差异  
- 评估方法在密码学（PBKDF2）、科学计算（HPCCG）和压缩算法（LZO）三类典型场景的泛化能力  

2、数据集:  
- **OpenSSL PBKDF2**：密码学密钥派生函数实现，含SHA1哈希、5×10⁶次迭代、480字节输出  
- **Mantevo HPCCG**：稀疏矩阵共轭梯度基准测试，使用LIL稀疏存储格式  
- **LZO压缩算法**：包含循环携带依赖的典型压缩算法基准  

3、关键设置:  
- **硬件环境**：双路Intel Xeon X5670 (2×12线程)、48GB内存  
- **编译器配置**：DaCe(GCC 12.1.1后端) vs Polly(Clang 15.0.6) vs GCC基线  
- **评估协议**：10次运行取中位数，95%置信区间，OpenMP并行执行  
- **特殊处理**：  
  - Polly未集成辅助转换（因未发现新SCoPs）  
  - PBKDF2对比包含手工并行版本和专用实现FastPBKDF2  
  - HPCCG启用OpenMP基线并应用LIL格式预处理