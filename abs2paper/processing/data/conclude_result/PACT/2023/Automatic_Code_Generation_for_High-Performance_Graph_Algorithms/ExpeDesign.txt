### 实验设计总结：

1. **核心目标**:
   - 验证自动生成的稀疏线性代数核与图算法代码的性能优势（与SuiteSparse:GraphBLAS和LAGraph对比）。
   - 评估编译器优化（如掩码操作、工作空间转换、半环替换）对性能的影响。
   - 测试两种典型图算法（三角形计数TC和广度优先搜索BFS）在不同稀疏输入下的表现。

2. **数据集**:
   - **SuiteSparse矩阵集合**：包含多种稀疏矩阵，存储格式为CSR（压缩稀疏行）。
     - 对称性要求：`rma10`和`scircuit`未用于TC算法评估（因非对称）。
     - 代表性输入：包括高密度矩阵（如`bcsstk17`）和大规模图数据（如`Orkut`和`LiveJournal`）。

3. **关键设置**:
   - **硬件环境**：Intel Xeon Skylake Gold 6126处理器，192GB DRAM。
   - **软件工具链**：
     - 编译器：LLVM-13（优化等级-O3），通过MLIR生成LLVM-IR代码。
     - 对比基准：SuiteSparse:GraphBLAS v7.3.2和LAGraph。
   - **实验配置**：
     - 输出格式：CSR，支持乱序（jumbled）和有序（unjumbled）状态。
     - 性能指标：10次运行平均值，默认顺序执行，并行实验使用24线程。
   - **优化技术**：
     - **掩码操作**：跳过无效计算（如零元素乘法）。
     - **工作空间转换**：改善数据局部性，减少稀疏结构的不规则访问。
     - **半环替换**：用加法-对半环（plus-pair）替代传统SpGEMM操作。