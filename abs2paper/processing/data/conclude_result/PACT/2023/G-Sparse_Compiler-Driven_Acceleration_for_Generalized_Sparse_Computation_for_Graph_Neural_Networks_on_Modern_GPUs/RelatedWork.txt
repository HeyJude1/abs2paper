## 相关工作总结

1. **现有方法一：基于节点/边并行化的框架（DGL、FeatGraph）**  
   - **核心思想**: 通过线程级并行化处理特征维度，利用节点和边的并行性加速稀疏计算。DGL依赖cuSPARSE库实现部分计算。  
   - **主要局限性**: 依赖外部库（如cuSPARSE）可能导致功能受限；未针对GNN特有的稀疏计算模式（如非规则数据访问）进行深度优化。

2. **现有方法二：共享内存与负载均衡优化（Sputnik、spECK）**  
   - **核心思想**: Sputnik通过共享内存优化、向量指令和GPU行混洗负载均衡技术加速DNN稀疏计算；spECK专注于稀疏计算的负载均衡问题。  
   - **主要局限性**: Sputnik主要面向DNN而非GNN；spECK的优化范围较窄，未覆盖GNN中其他关键瓶颈（如数据复用）。

3. **现有方法三：GNN专用稀疏计算优化（Ge-SpMM、ES-SpMM、FusedMM）**  
   - **核心思想**:  
     - Ge-SpMM：通过合并行缓存方法高效访问全局内存，支持通用SpMM计算。  
     - ES-SpMM：联合设计边采样与SpMM内核，利用共享内存数据复用加速计算。  
     - FusedMM：针对CPU优化GNN稀疏计算的负载均衡与内存带宽利用。  
   - **主要局限性**: 各自聚焦单一优化点（如内存访问或采样），缺乏全局调度策略；FusedMM仅支持CPU平台。

4. **现有方法四：DSL编译器（Halide/TVM/TACO等）**  
   - **核心思想**: 通过领域专用语言（DSL）抽象计算过程，支持自动调度优化。TACO可表达稀疏计算但功能有限。  
   - **主要局限性**:  
     - 主流DSL（如Halide、TVM）专注于密集矩阵计算，对稀疏性支持不足。  
     - TACO缺乏对非规则缓冲区边界推断和绑定索引表达的支持，难以适配GNN的复杂稀疏模式。

### 研究缺口总结
1. **领域适配性不足**：现有DSL编译器未针对GNN的稀疏计算特性（如动态图结构、非规则数据流）设计优化策略。
2. **局部优化局限**：多数方法仅解决单一问题（如负载均衡或内存访问），缺乏端到端的协同优化框架。
3. **平台覆盖不全**：CPU与GPU优化方案割裂，缺少统一的高效实现。
4. **调度灵活性缺失**：传统DSL的调度空间有限，无法自动探索GNN特有的数据复用与并行化机会。