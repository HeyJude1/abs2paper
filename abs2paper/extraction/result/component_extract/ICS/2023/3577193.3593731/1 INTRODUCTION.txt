1 INTRODUCTION
Solving large, dense, non-symmetric systems of linear equations is a key step in many applications . Gaussian elimination with partial pivoting (GEPP) is commonly used to solve these systems and provides robust numerical accuracy for almost all classes of matrices. However, partial pivoting can introduce significant overheads, including synchronizations, latency-bound pivot searches, and exchanging rows in memory. The row exchanges also must be interleaved with the Schur-complement updates, reducing the available parallelism. Finally, these overheads are made worse by the growing performance gap between arithmetic and data movement . Gaussian elimination with no pivoting (GENP) can achieve significantly higher performance by avoiding these overheads but cannot accurately solve many types of systems . We consider an alternative to pivoting based on low rank, additive modifications of the diagonal submatrices: we call it block elimination with additive modifications (BEAM). The goal of this approach is to incur lower overheads than GEPP while providing better numerical stability than GENP. Related modifications have been previously considered for sparse matrices . But, we consider dense matrices, and our proposed algorithm modifies entire blocks of the matrix instead of targeting just individual elements.
To motivate the additive strategy, consider GENP. Thus, small ùê¥[ùëò, ùëò] entries can result in significant element growth, which in turn can lead to a large backward error . Diagonal blocks with small singular values behave analogously. To prevent this growth, we propose monitoring the singular values of the diagonal blocks and modifying those having values below a predefined tolerance. These modifications give rise to a perturbed system with better numerical properties than the original one. The perturbation can then be corrected collectively with the Woodbury formula or iterative refinement. Consequently, our work makes the following contributions:
‚Ä¢ We propose a general scheme for additive modifications in the LU factorization of dense systems.
‚Ä¢ We propose choosing additive modifications in batches based on diagonal blocks of the matrix instead of individual entries.
‚Ä¢ We prove practical bounds on key condition numbers that determine the overall numerical stability of our method.
‚Ä¢ We test the accuracy and performance for essential matrix types at scale on the Summit supercomputer with multiple GPU accelerators per node.