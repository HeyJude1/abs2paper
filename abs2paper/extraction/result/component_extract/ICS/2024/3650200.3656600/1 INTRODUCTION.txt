1 INTRODUCTION
The shortest paths problem, a fundamental problem in graph theory and network science, has garnered interest from researchers across various disciplines such as transportation planning, computer science, network science, and applied mathematics . As the scale of the graph increases, serial algorithms struggle to adapt to changes, and prompting researchers to explore parallel computing as a solution to the shortest paths problem.
The state-of-the-art solution for SSSP (Single-Source Shortest Paths) problem is the BFS algorithm on unweighted graph and Δ-stepping Dijkstra's algorithm on weighted graph , which have garnered significant attention . Currently, there are several solutions available in the industry for rapidly computing the APSP (All-Pairs Shortest Paths) problem on large-scale clusters . ) times for all graphs , where 𝑚 and 𝑛 respectively represents the number of nodes and edges in graph. The APSP algorithms based on matrix multiplication, such as Seidel's algorithm , Galil and Margalit's algorithm , reduces the time complexity by divide-and-conquer strategy, these approaches require significant memory resources for maintaining intermediate matrices.
We introduce a novel algorithm named DAWN (Distance Assessment algorithm With matrix operations on Networks), which is based on matrix operation-optimizing. DAWN requires 𝑂 (𝑚) space and 𝑂 (𝐸 𝑤𝑐𝑐 (𝑖)) time on unweighted graphs for SSSP tasks. It is also capable of processing APSP tasks and requires 𝑂 (𝑆 𝑤𝑐𝑐 • 𝐸 𝑤𝑐𝑐 ) time. Here, 𝑆 𝑤𝑐𝑐 and 𝐸 𝑤𝑐𝑐 denote the number of nodes and edges included in the largest WCC (Weakly Connected Component) in the graphs, and 𝑖 is the source node of the SSSP task.
The main contributions of this work are as follows:
(1) We propose a matrix operation-optimized algorithm, which requires 𝑂 (𝑚) space and 𝑂 (𝐸 𝑤𝑐𝑐 (𝑖)) times on the unweighted graphs for SSSP problem, respectively. In contrast to the prevalent optimization of state-ofthe-art BFS implementation, which commonly rely on priority queues, our approach leverages matrix operations to endow DAWN with enhanced parallelism. We propose BOVM (Boolean Vector-Matrix Operation) method, which make DAWN to require 𝑂 ( 𝜖 (𝑖 ) 2 𝑚) time for SSSP tasks on unweighted graphs, where 𝜖 (𝑖) is the eccentricity of node 𝑖. Further, we propose an SOVM (Sparse Optimized Boolean Vector-Matrix Operation) method to significantly improve the performance of DAWN on sparse graphs, reducing the time requirements to 𝑂 (𝐸 𝑤𝑐𝑐 (𝑖)) for SSSP tasks and 𝑂 (𝑆 𝑤𝑐𝑐 • 𝐸 𝑤𝑐𝑐 ) for APSP tasks.
(3) DAWN achieves superior performance compared to Gunrock while utilizing fewer GPU memory resources. It successfully completes the SSSP task on graphs with 214 million nodes and 936 million edges using an RTX 3080TI, a task unattainable by Gunrock. Prior to DAWN, algorithms based on matrix multiplication used a divideand-conquer strategy, such as Seidel's algorithm , which generated numerous intermediate matrices and required excessive memory.
In Section 2, we present an overview of the typical shortest paths algorithms. In Section 3, we describe the design of the DAWN and propose optimization methods to make it more widely applicable to various graphs. In Section 4, we conducted comparative experiments of several implementations across various platforms, which demonstrates the high efficiency of DAWN. In Section 5, we summarize the work in this paper and outline future research directions. Table lists the notations used throughout the paper.