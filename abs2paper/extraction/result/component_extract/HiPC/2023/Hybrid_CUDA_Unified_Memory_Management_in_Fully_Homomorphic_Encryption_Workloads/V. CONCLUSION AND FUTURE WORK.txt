V. CONCLUSION AND FUTURE WORK
In conclusion, we designed three schemes that utilize a hybrid allocation strategy combining cudaMallocAsync and cudaMallocManaged to outperform the purely managed memory scheme in all HE workloads. We have provided a static allocation scheme that improves unified memory performance by 31%. We have also discovered that using the profiling allocation scheme gives is 22% better than manual swapping of objects in and out of GPU memory by an experienced programmer who extensively knows the HEaaN library code base. Finally, we implement a dynamic allocation scheme that gives up to 50% better performance in bootstrapping operations than the baseline fully unified memory case in without having the disadvantage of having to profile or alter the code-base, by dynamically adjusting the allocation of objects on-the-fly.
In our future work, we will improve upon the dynamic allocation scheme, so that it can give better performance, hopefully being closer to the "oracle" profiling allocation version which knows the lifetime of all objects in advance, but without having the overhead of having to profile the entire workload before hand.