实验设计总结：  
1、核心目标:  
- 验证BEAM算法在数值稳定性、可扩展性和性能方面的可行性（与GEPP/GENP对比）  
- 分析容忍度（τ）和分块大小（𝑛𝑏）对精度与性能的权衡影响  
- 测试Woodbury校正对误差和计算效率的作用  

2、数据集:  
- **随机矩阵**：7种类型（如rand_dominant、rand），用于测试通用场景  
- **结构化矩阵**：8种类型（如orthog、zielkeNS、svd_geo等），涵盖病态矩阵和特殊结构（如正交矩阵）  
- 生成方式：右端项元素服从正态分布，矩阵生成器固定随机种子以保证可复现性  

3、关键设置:  
- **硬件环境**：Summit超算的8个节点（每节点含6×NVIDIA V100 GPU + 2×IBM POWER9 CPU），GPU主导计算  
- **软件栈**：SLATE库（基于GPU的分布式稠密线性代数库）、CUDA 11.0.3、IBM Spectrum MPI 10.4.0.3  
- **参数配置**：  
  - BEAM分块大小（𝑛𝑏=64/512/768），容忍度τ∈[10⁻¹⁰,10⁻⁶]  
  - 迭代收敛阈值：√𝑛×单位舍入误差（≈3.5×10⁻¹⁴，𝑛=10⁵时）或最多30次迭代  
  - 对比基线：GEPP（分块768）、GENP（分块512）  
- **性能优化**：  
  - 自定义GPU批处理三角求解内核（结合MAGMA库优化缓存复用）  
  - Frobenius范数替代理论中的2-范数以降低计算开销